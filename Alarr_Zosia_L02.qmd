---
title: "L02 More Models"
subtitle: "Data Science 3 with R (STAT 301-3)"
author: "Zosia Alarr"

format:
  html:
    toc: true
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    
execute:
  warning: false

from: markdown+emoji  
---

## Github Repo Link

::: {.callout-important}


[https://github.com/STAT301-3-2023SP/L02-more-models-zosiaalarr.git](https://github.com/STAT301-3-2023SP/L02-more-models-zosiaalarr.git)

:::


# Executive Summary 

The goal of this project is to predict whether or not a wild fire will reach the wildlife protection zone of a given national forest. The data set includes 500 different wildfires in a national park in North America. The outcome variable of interest is a dummy encoded factor variable with outcomes being either, 1 the wildfire reached the wildlife protection zone, or 0 it did not. 
 
We predicted whether or not a wildfire will reach the wildlife protection zone based on 8 different models. We used all 14 variables for each prediction. We reserved 25% of our data for testing data, the remaining we used for cross validation with 5 folds and 3 repeats. We tuned for the hyperparameters in each model and used the resample data to train the models and collect their best parameter values. We used the Area under the ROC curve as our performance metric to evalute each model.The resulting model performances are shown in the table and graph bellow. 

```{r, echo=FALSE}
# table here 
load("results/result_table.rda")
library(kableExtra)



result_table %>% 
  kbl(caption = "Results Table") %>% 
  kable_classic() %>% 
  save_kable("result_table.png", zoom = 10)


```
![](graph_1.png)


![](result_table.png)

The table above shows that the Neural Network model has the highest ROC value, meaning it performed the best. The Neural Network model had the best performance when its `hidden_units` value was 10 and its penalty was `1`. When used with the testing data, the Neural Network had an ROC value of .855, slightly lower than its value in the training set. A confusion matrix can be observed bellow that shows the number of false positives, false negatives, true negatives, and true positives. This matrix shows that the model is mostly accurate but does have a fair amount of false positives and negatives.  

```{r, echo=FALSE}

load("results/roc_auc.rda")
load("results/conf_matrix.rda")


library(yardstick)
library(ggplot2)


roc_auc %>% 
  kbl(caption = "ROC AUC: Neural Network Model ") %>% 
  kable_classic() %>% 
  save_kable("roc_auc.png", zoom = 10)


autoplot(conf_matrix, type = "heatmap") +
  scale_fill_gradient(low="#D6EAF8",high = "#2E86C1")



```

![](roc_auc.png)

Using a Neural Network we can predict whether or not a wildfire will reach a wildlife protection zone with fair accuracy. Future studies could further investigate different types of models to see if their test performance is better than the Neural Network model used in this analysis. 



